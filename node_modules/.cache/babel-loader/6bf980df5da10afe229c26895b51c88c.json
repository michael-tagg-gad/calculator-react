{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michael.tagg\\\\AppData\\\\Local\\\\Dev\\\\gad-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Wrapper from \"./components/Wrapper\";\nimport Screen from \"./components/Screen\";\nimport ButtonBox from \"./components/ButtonBox\";\nimport Button from \"./components/Button\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const btnValues = [[\"C\", \"+-\", \"%\", \"/\"], [7, 8, 9, \"X\"], [4, 5, 6, \"-\"], [1, 2, 3, \"+\"], [0, \".\", \"=\"]];\n  const [calc, setCalc] = useState({\n    sign: \"\",\n    num: 0,\n    res: 0\n  });\n\n  const toLocaleString = num => String(num).replace(/(?<!\\..*)(\\d)(?=(?:\\d{3})+(?:\\.|$))/g, \"$1 \");\n\n  const removeSpaces = num => num.toString().replace(/\\s/g, \"\");\n\n  const numClickHandler = e => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    if (removeSpaces(calc.num).length < 16) {\n      setCalc({ ...calc,\n        num: calc.num === 0 && value === \"0\" ? \"0\" : removeSpaces(calc.num) % 1 === 0 ? toLocaleString(Number(removeSpaces(calc.num + value))) : toLocaleString(calc.num + value),\n        res: !calc.sign ? 0 : calc.res\n      });\n    }\n  };\n\n  const commaClickHandler = e => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n    setCalc({ ...calc,\n      num: !calc.num.toString().includes(\".\") ? calc.num + value : calc.num\n    });\n  };\n\n  const signClickHandler = e => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n    setCalc({ ...calc,\n      sign: value,\n      res: !calc.res && calc.num ? calc.num : calc.res,\n      num: 0\n    });\n  };\n\n  const equalsClickHandler = () => {\n    if (calc.sign && calc.num) {\n      const math = (a, b, sign) => sign === \"+\" ? a + b : sign === \"-\" ? a - b : sign === \"X\" ? a * b : a / b;\n\n      setCalc({ ...calc,\n        res: calc.num === \"0\" && calc.sign === \"/\" ? \"Can't divide with 0\" : toLocaleString(math(Number(removeSpaces(calc.res)), Number(removeSpaces(calc.num)), calc.sign)),\n        sign: \"\",\n        num: 0\n      });\n    }\n  };\n\n  const invertClickHandler = () => {\n    setCalc({ ...calc,\n      num: calc.num ? toLocaleString(removeSpaces(calc.num) * -1) : 0,\n      res: calc.res ? toLocaleString(removeSpaces(calc.res) * -1) : 0,\n      sign: \"\"\n    });\n  };\n\n  const percentClickHandler = () => {\n    let num = calc.num ? parseFloat(removeSpaces(calc.num)) : 0;\n    let res = calc.res ? parseFloat(removeSpaces(calc.res)) : 0;\n    setCalc({ ...calc,\n      num: num /= Math.pow(100, 1),\n      res: res /= Math.pow(100, 1),\n      sign: \"\"\n    });\n  };\n\n  const resetClickHandler = () => {\n    setCalc({ ...calc,\n      sign: \"\",\n      num: 0,\n      res: 0\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Screen, {\n        value: calc.num ? calc.num : calc.res\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonBox, {\n        children: btnValues.flat().map((btn, i) => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            className: btn === \"=\" ? \"equals\" : \"\",\n            value: btn,\n            onClick: btn === \"C\" ? resetClickHandler : btn === \"+-\" ? invertClickHandler : btn === \"%\" ? percentClickHandler : btn === \"=\" ? equalsClickHandler : btn === \"/\" || btn === \"X\" || btn === \"-\" || btn === \"+\" ? signClickHandler : btn === \".\" ? commaClickHandler : numClickHandler\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"i2PL5LfJVl+HiihFBix00qMza9w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/michael.tagg/AppData/Local/Dev/gad-react/src/App.js"],"names":["Wrapper","Screen","ButtonBox","Button","useState","App","btnValues","calc","setCalc","sign","num","res","toLocaleString","String","replace","removeSpaces","toString","numClickHandler","e","preventDefault","value","target","innerHTML","length","Number","commaClickHandler","includes","signClickHandler","equalsClickHandler","math","a","b","invertClickHandler","percentClickHandler","parseFloat","Math","pow","resetClickHandler","flat","map","btn","i"],"mappings":"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","sourcesContent":["\nimport './App.css';\n\nimport Wrapper from \"./components/Wrapper\";\nimport Screen from \"./components/Screen\";\nimport ButtonBox from \"./components/ButtonBox\";\nimport Button from \"./components/Button\";\n\nimport { useState } from 'react';\n\n\n\n\nfunction App() {\n\n  const btnValues = [\n    [\"C\", \"+-\", \"%\", \"/\"],\n    [7, 8, 9, \"X\"],\n    [4, 5, 6, \"-\"],\n    [1, 2, 3, \"+\"],\n    [0, \".\", \"=\"],\n  ];\n\n  const [calc, setCalc] = useState({\n    sign: \"\",\n    num: 0,\n    res: 0,\n  });\n\n  const toLocaleString = (num) =>\n  String(num).replace(/(?<!\\..*)(\\d)(?=(?:\\d{3})+(?:\\.|$))/g, \"$1 \");\n\n  const removeSpaces = (num) => num.toString().replace(/\\s/g, \"\");\n\n  const numClickHandler = (e) => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    if (removeSpaces(calc.num).length < 16) {\n      setCalc({\n        ...calc,\n        num:\n          calc.num === 0 && value === \"0\"\n            ? \"0\"\n            : removeSpaces(calc.num) % 1 === 0\n            ? toLocaleString(Number(removeSpaces(calc.num + value)))\n            : toLocaleString(calc.num + value),\n        res: !calc.sign ? 0 : calc.res,\n      });\n    }\n  };\n\n  const commaClickHandler = (e) => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n\n    setCalc({\n      ...calc,\n      num: !calc.num.toString().includes(\".\") ? calc.num + value : calc.num,\n    });\n  };\n\n  const signClickHandler = (e) => {\n    e.preventDefault();\n    const value = e.target.innerHTML;\n    setCalc({\n      ...calc,\n      sign: value,\n      res: !calc.res && calc.num ? calc.num : calc.res,\n      num: 0,\n    });\n  };\n\n  const equalsClickHandler = () => {\n    if (calc.sign && calc.num) {\n      const math = (a, b, sign) =>\n        sign === \"+\"\n          ? a + b\n          : sign === \"-\"\n          ? a - b\n          : sign === \"X\"\n          ? a * b\n          : a / b;\n\n      setCalc({\n        ...calc,\n        res:\n          calc.num === \"0\" && calc.sign === \"/\"\n            ? \"Can't divide with 0\"\n            : toLocaleString(\n                math(\n                  Number(removeSpaces(calc.res)),\n                  Number(removeSpaces(calc.num)),\n                  calc.sign\n                )\n              ),\n        sign: \"\",\n        num: 0,\n      });\n    }\n  };\n\n  const invertClickHandler = () => {\n    setCalc({\n      ...calc,\n      num: calc.num ? toLocaleString(removeSpaces(calc.num) * -1) : 0,\n      res: calc.res ? toLocaleString(removeSpaces(calc.res) * -1) : 0,\n      sign: \"\",\n    });\n  };\n\n  const percentClickHandler = () => {\n    let num = calc.num ? parseFloat(removeSpaces(calc.num)) : 0;\n    let res = calc.res ? parseFloat(removeSpaces(calc.res)) : 0;\n\n    setCalc({\n      ...calc,\n      num: (num /= Math.pow(100, 1)),\n      res: (res /= Math.pow(100, 1)),\n      sign: \"\",\n    });\n  };\n\n  const resetClickHandler = () => {\n    setCalc({\n      ...calc,\n      sign: \"\",\n      num: 0,\n      res: 0,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Screen value={calc.num ? calc.num : calc.res} />\n        <ButtonBox>\n          {\n            btnValues.flat().map((btn, i) => {\n              return (\n                <Button\n                  key={i}\n                  className={btn === \"=\" ? \"equals\" : \"\"}\n                  value={btn}\n                  onClick={\n                    btn === \"C\"\n                    ? resetClickHandler\n                    : btn === \"+-\"\n                    ? invertClickHandler\n                    : btn === \"%\"\n                    ? percentClickHandler\n                    : btn === \"=\"\n                    ? equalsClickHandler\n                    : btn === \"/\" || btn === \"X\" || btn === \"-\" || btn === \"+\"\n                    ? signClickHandler\n                    : btn === \".\"\n                    ? commaClickHandler\n                    : numClickHandler\n                  }\n                />\n              );\n            })\n          }\n        </ButtonBox>\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}